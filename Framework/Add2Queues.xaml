<Activity mc:Ignorable="sap sap2010" x:Class="Add2Queues" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1203.2,1967.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Add2Queues_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Add2Queues" sap:VirtualizedContainerService.HintSize="1213.6,1862.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="vDtbRegistros" />
      <Variable x:TypeArguments="s:String[]" Name="vArrColumnas" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDtbRegistrosAux" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[vDtbRegistros]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1172,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[in_Config(&quot;SheetRegistros&quot;).ToString]" WorkbookPath="[Path.Combine(in_Config(&quot;RutaArchivosGenerados&quot;).ToString, in_Config(&quot;FileRegistros&quot;).ToString)]" />
    <Assign sap:VirtualizedContainerService.HintSize="1172,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[vArrColumnas]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[(From dc In vDtbRegistros.Columns.Cast(Of DataColumn) Select dc.ColumnName).ToArray()]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[vDtbRegistros.AsEnumerable.Where(Function(fila) NOT fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;EXITOSO&quot;) AND NOT fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;NO PROCESABLE&quot;) AND NOT fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;REGISTRADO&quot;) AND NOT fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;PRELIMINAR&quot;)).Count &gt; 0]" sap:VirtualizedContainerService.HintSize="1172,1541.6" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="794.4,1392" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="752.8,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[vDtbRegistrosAux]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[vDtbRegistros.AsEnumerable.Where(Function(fila) NOT fila(in_Config("ColStatus").ToString).ToString.ToUpper.Trim.Equals("EXITOSO") AND NOT fila(in_Config("ColStatus").ToString).ToString.ToUpper.Trim.Equals("NO PROCESABLE") AND NOT fila(in_Config("ColStatus").ToString).ToString.ToUpper.Trim.Equals("REGISTRADO") AND NOT fila(in_Config("ColStatus").ToString).ToString.ToUpper.Trim.Equals("PRELIMINAR")).CopyToDataTable]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDtbRegistrosAux]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="752.8,264" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" DueDate="[now.AddDays(1)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="RECOQueue">
                    <ui:AddQueueItem.ItemInformation>
                      <InArgument x:TypeArguments="x:String" x:Key="ColDetalle">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColDetalle&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColCuenta">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColCodigo&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColMonto">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColMonto&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColSociedad">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColSociedad&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColMoneda">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColMoneda&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColTipo">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColModo&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColCuenta2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColCuenta&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColClave">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColClave&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColClave2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColClave2&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColCentro">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColCentro&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColCentro2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColCentro2&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColCME">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColCME&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColCME2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColCME2&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColFinca">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColFinca&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColElemento">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColElemento&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColElemento2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColElemento2&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColMonto2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColMonto2&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColID">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColID&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColAsignacion">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColAsignacion&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColAsignacion2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColAsignacion2&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColFValor">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColFValor&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColFValor2">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColFValor2&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColCuentaB">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColCuentaB&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColAgrupado">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColAgrupado&quot;).ToString).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ColOrigen">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(in_Config(&quot;ColOrigen&quot;).ToString).ToString" />
                      </InArgument>
                    </ui:AddQueueItem.ItemInformation>
                  </ui:AddQueueItem>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
          <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[in_Config(&quot;ColStatus&quot;).ToString]" DataTable="[vDtbRegistrosAux]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="752.8,22.4" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
          <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[in_Config(&quot;ColObservaciones&quot;).ToString]" DataTable="[vDtbRegistrosAux]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="752.8,22.4" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2" />
          <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[in_Config(&quot;ColDocumento&quot;).ToString]" DataTable="[vDtbRegistrosAux]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="752.8,22.4" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_3" />
          <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[in_Config(&quot;ColStatus&quot;).ToString]" DataTable="[vDtbRegistrosAux]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="752.8,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
          <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[in_Config(&quot;ColObservaciones&quot;).ToString]" DataTable="[vDtbRegistrosAux]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="752.8,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
          <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[in_Config(&quot;ColDocumento&quot;).ToString]" DataTable="[vDtbRegistrosAux]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="752.8,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3" />
          <Assign sap:VirtualizedContainerService.HintSize="752.8,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[vDtbRegistrosAux]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[vDtbRegistrosAux.DefaultView.ToTable(False, vArrColumnas)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[vDtbRegistros.AsEnumerable.Where(Function(fila) fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;EXITOSO&quot;) OR fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;NO PROCESABLE&quot;) OR fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;REGISTRADO&quot;) OR fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;PRELIMINAR&quot;)).Count &gt; 0]" sap:VirtualizedContainerService.HintSize="752.8,420.8" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="375.2,271.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MergeDataTable Destination="[vDtbRegistrosAux]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[vDtbRegistros.AsEnumerable.Where(Function(fila) fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;EXITOSO&quot;) OR fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;NO PROCESABLE&quot;) OR fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;REGISTRADO&quot;) OR fila(in_Config(&quot;ColStatus&quot;).ToString).ToString.ToUpper.Trim.Equals(&quot;PRELIMINAR&quot;)).CopyToDataTable]" />
                <ui:WriteRange AddHeaders="True" DataTable="[vDtbRegistrosAux]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[in_Config(&quot;SheetRegistros&quot;).ToString]" StartingCell="A1" WorkbookPath="[Path.Combine(in_Config(&quot;RutaArchivosGenerados&quot;).ToString, in_Config(&quot;FileRegistros&quot;).ToString)]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:WriteRange AddHeaders="True" DataTable="[vDtbRegistrosAux]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[in_Config(&quot;SheetRegistros&quot;).ToString]" StartingCell="A1" WorkbookPath="[Path.Combine(in_Config(&quot;RutaArchivosGenerados&quot;).ToString, in_Config(&quot;FileRegistros&quot;).ToString)]" />
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;No se encontraron registros para cargar en la cola&quot;]" />
      </If.Else>
    </If>
  </Sequence>
</Activity>